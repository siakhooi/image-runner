#!/bin/bash

readonly CONFIG_PATH=/usr/lib/image-runner/config.yaml
readonly WORKINGDIR=/working
readonly CONTAINER_CMD=docker

PROGRAM_NAME=$(basename "$0")

if [[ $PROGRAM_NAME == 'run-linux' ]]; then
  man run-linux
  exit 0
fi

# check if program_name exists
readonly image_name_yq_path=".run-linux.${PROGRAM_NAME}.image"
image_name=$(yq "$image_name_yq_path" "$CONFIG_PATH" | sed 's/^null$//')
readonly image_name
readonly image_command_yq_path=".run-linux.${PROGRAM_NAME}.command"
image_command=$(yq "$image_command_yq_path" "$CONFIG_PATH" | sed 's/^null$//')
readonly image_command

if [[ -z "$image_name" ]] ||
  [[ -z "$image_command" ]]; then
  echo "$PROGRAM_NAME is not configured." >&2
  exit 1
fi

if [[ $# -gt 1 ]]; then
  echo "Usage: $(basename "$0") [workingDir]" >&2
  exit 0
fi

host_directory=$(pwd)

if [[ $# -eq 1 ]]; then
  host_directory=$(realpath "$1")
  if [[ ! -d $host_directory ]]; then
    echo "Working Directory $host_directory not exists!" >&2
    exit 2
  fi
fi

if ! command -v $CONTAINER_CMD >/dev/null; then
  echo "Run Container Command ($CONTAINER_CMD) not exists! Please install." >&2
  exit 3
fi

set -x
$CONTAINER_CMD run --rm -it -w "$WORKINGDIR" -v "$host_directory":"$WORKINGDIR" "$image_name" "$image_command"
